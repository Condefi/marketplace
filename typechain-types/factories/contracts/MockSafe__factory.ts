/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MockSafe, MockSafeInterface } from "../../contracts/MockSafe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "addOwnerWithThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "threshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161063d38038061063d83398181016040528101906100329190610105565b6000819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001808190555050610132565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100d2826100a7565b9050919050565b6100e2816100c7565b81146100ed57600080fd5b50565b6000815190506100ff816100d9565b92915050565b60006020828403121561011b5761011a6100a2565b5b6000610129848285016100f0565b91505092915050565b6104fc806101416000396000f3fe60806040526004361061004e5760003560e01c8063025e7c271461005a5780630d582f131461009757806342cde4e8146100c0578063a0e67e2b146100eb578063e75235b81461011657610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c91906102c7565b610141565b60405161008e9190610335565b60405180910390f35b3480156100a357600080fd5b506100be60048036038101906100b9919061037c565b610180565b005b3480156100cc57600080fd5b506100d56101ee565b6040516100e291906103cb565b60405180910390f35b3480156100f757600080fd5b506101006101f4565b60405161010d91906104a4565b60405180910390f35b34801561012257600080fd5b5061012b610282565b60405161013891906103cb565b60405180910390f35b6000818154811061015157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806001819055505050565b60015481565b6060600080548060200260200160405190810160405280929190818152602001828054801561027857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161022e575b5050505050905090565b6000600154905090565b600080fd5b6000819050919050565b6102a481610291565b81146102af57600080fd5b50565b6000813590506102c18161029b565b92915050565b6000602082840312156102dd576102dc61028c565b5b60006102eb848285016102b2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061031f826102f4565b9050919050565b61032f81610314565b82525050565b600060208201905061034a6000830184610326565b92915050565b61035981610314565b811461036457600080fd5b50565b60008135905061037681610350565b92915050565b600080604083850312156103935761039261028c565b5b60006103a185828601610367565b92505060206103b2858286016102b2565b9150509250929050565b6103c581610291565b82525050565b60006020820190506103e060008301846103bc565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61041b81610314565b82525050565b600061042d8383610412565b60208301905092915050565b6000602082019050919050565b6000610451826103e6565b61045b81856103f1565b935061046683610402565b8060005b8381101561049757815161047e8882610421565b975061048983610439565b92505060018101905061046a565b5085935050505092915050565b600060208201905081810360008301526104be8184610446565b90509291505056fea26469706673582212207eeaed8d14573720c3cb77099378abfbcd4ac8a0483d4eb6b2baee770da5375b64736f6c634300081b0033";

type MockSafeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockSafeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockSafe__factory extends ContractFactory {
  constructor(...args: MockSafeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      MockSafe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockSafe__factory {
    return super.connect(runner) as MockSafe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSafeInterface {
    return new Interface(_abi) as MockSafeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockSafe {
    return new Contract(address, _abi, runner) as unknown as MockSafe;
  }
}
